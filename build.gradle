plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'at.upstream_mobility.itacademy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springShellVersion', "3.3.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.shell:spring-shell-starter'
	implementation 'com.squareup.okhttp3:okhttp:4.9.3'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'io.gsonfire:gson-fire:1.8.5'
	implementation files('bored-api-client/target/openapi-java-client-1.1.jar')
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.shell:spring-shell-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	testImplementation 'org.mockito:mockito-core:4.0.0'
	testImplementation 'org.springframework:spring-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	standardInput = System.in
	jvmArgs = ['-Dorg.jline.terminal.type=xterm-256color']
}

jacoco {
	toolVersion = "0.8.7"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/BoredApplication.class'])
		}))
	}
}